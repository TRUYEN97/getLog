/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SQT.View;

import SQT.Controller.Core.AbsMode;
import SQT.Controller.Core.Engine;
import SQT.Controller.FileScans;
import SQT.Controller.FolderScan;
import SQT.Controller.IQLog.IQCycleTime;
import SQT.Controller.IQLog.IQData;
import SQT.Controller.InitSource;
import SQT.Controller.Json.JsonData;
import SQT.Controller.TxtLog.CycleTimeTxt;
import SQT.Model.MyNodeTree;
import SQT.Model.ResultTest.Sheet.AbsSheetType;
import SQT.Model.ResultTest.Sheet.TypeSheet.ByTypeSheet;
import SQT.Model.ResultTest.Sheet.TypeSheet.All_InOne;
import SQT.Model.ServiceClass.Service;
import SQT.Model.WareHouse;
import SQT.View.MyChooser.MyChooser;
import SQT.View.PopupMenu.MyTableMenu;
import SQT.View.PopupMenu.TreeMenu;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTree;
import javax.swing.SwingConstants;

/**
 *
 * @author 21AK22
 */
public class LogAnalysis extends javax.swing.JFrame {

    /**
     * Creates new form LogAnalysis
     */
    private List<AbsMode> listMode;
    private List<AbsSheetType> ExcellMode;
    private final Engine engine;
    private final FileScans fileScans;
    private final FolderScan folderScan;
    private final TableService tableService;
    private final Service service;
    private final WareHouse wareHouse;
    private final MyChooser chooser;
    private final InitSource initSource;
    private final MyTableMenu tableMenu;
    private final TreeMenu treeMenu;

    public LogAnalysis() {
        initListMode();
        initListExecellMode();
        initComponents();
        this.engine = new Engine(this);
        this.wareHouse = WareHouse.getInstance();
        this.service = new Service();
        this.initSource = new InitSource();
        this.chooser = new MyChooser(this.initSource.getDir());
        this.fileScans = new FileScans(this);
        this.tableService = new TableService(this);
        this.folderScan = new FolderScan(this);
        this.tableMenu = new MyTableMenu(this);
        this.treeMenu = new TreeMenu(fileScans, folderScan);
    }

    private void initListMode() {
        this.listMode = new ArrayList<>();
        this.listMode.add(new IQData("IQ Log", this));
        this.listMode.add(new JsonData("json Log", this));
        this.listMode.add(new IQCycleTime("IQ cycle time", this));
        this.listMode.add(new CycleTimeTxt("logTxt cycle time", this));
    }

    private void initListExecellMode() {
        this.ExcellMode = new ArrayList<>();
        this.ExcellMode.add(new ByTypeSheet("Alone"));
        this.ExcellMode.add(new All_InOne("All in one"));
    }

    private String[] getListMode() {
        String[] listName = new String[listMode.size()];
        for (int index = 0; index < listMode.size(); index++) {
            listName[index] = listMode.get(index).getName();
        }
        return listName;
    }

    private String[] getListSheetMode() {
        String[] listName = new String[ExcellMode.size()];
        for (int index = 0; index < ExcellMode.size(); index++) {
            listName[index] = ExcellMode.get(index).getName();
        }
        return listName;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtPathLog = new javax.swing.JTextField();
        btBrowser = new javax.swing.JButton();
        lbSun = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtTitle = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtItem = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbListFile = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        txtMatch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtContain = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        lbListSun = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TreeFolder = new javax.swing.JTree();
        jPanel7 = new javax.swing.JPanel();
        btBrowserSave = new javax.swing.JButton();
        txtNameSave = new javax.swing.JTextField();
        btOpen = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        Processer = new javax.swing.JProgressBar();
        lbProcess = new javax.swing.JLabel();
        cbbMode = new javax.swing.JComboBox<>();
        btRun = new javax.swing.JButton();
        cbbExcellType = new javax.swing.JComboBox<>();
        btStopScan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Log analysis 2.1.3");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Path", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        txtPathLog.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPathLog.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPathLogKeyPressed(evt);
            }
        });

        btBrowser.setText("Browser");
        btBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBrowserActionPerformed(evt);
            }
        });

        lbSun.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSun.setText("---");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbSun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtPathLog))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btBrowser)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPathLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbSun)
                .addGap(30, 30, 30))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Title", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        txtTitle.setColumns(20);
        txtTitle.setRows(5);
        txtTitle.setToolTipText("<html>- Thêm kí tự '*' vào đầu dòng nếu muốn tìm kiếm kết quả được bắt đầu với từ khóa đầu tiên.<br>\tví dụ: *:per,xxx,yyy; <br>- '$' tìm kiếm kết quả với kết thúc bằng từ khóa cuối cùng. <br>- \"*$\" kết hợp cả hai.<br>-Kết thúc bằng dấu ';'</html>");
        jScrollPane5.setViewportView(txtTitle);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        txtItem.setColumns(20);
        txtItem.setRows(5);
        txtItem.setToolTipText("<html>- Thêm kí tự '*' vào đầu dòng nếu muốn tìm kiếm kết quả được bắt đầu với từ khóa đầu tiên.<br>\tví dụ: *:per,xxx,yyy; <br>- '$' tìm kiếm kết quả với kết thúc bằng từ khóa cuối cùng. <br>- \"*$\" kết hợp cả hai.<br>-Kết thúc bằng dấu ';'</html>");
        jScrollPane6.setViewportView(txtItem);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jScrollPane4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane4MouseClicked(evt);
            }
        });

        tbListFile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numble", "Directory", "Name ", "Date time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbListFile.setShowHorizontalLines(true);
        tbListFile.setShowVerticalLines(true);
        tbListFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbListFileMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbListFile);
        if (tbListFile.getColumnModel().getColumnCount() > 0) {
            tbListFile.getColumnModel().getColumn(0).setMaxWidth(60);
            tbListFile.getColumnModel().getColumn(3).setMinWidth(120);
            tbListFile.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        jPanel9.setBackground(new java.awt.Color(204, 204, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtMatch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMatchKeyPressed(evt);
            }
        });

        jLabel2.setText("Match");

        txtContain.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtContainKeyPressed(evt);
            }
        });

        jLabel1.setText("Contain");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContain, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(txtMatch))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtContain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbListSun.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbListSun.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbListSun.setText("...");
        lbListSun.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbListSun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbListSun, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        TreeFolder.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        TreeFolder.addTreeExpansionListener(new javax.swing.event.TreeExpansionListener() {
            public void treeCollapsed(javax.swing.event.TreeExpansionEvent evt) {
            }
            public void treeExpanded(javax.swing.event.TreeExpansionEvent evt) {
                TreeFolderTreeExpanded(evt);
            }
        });
        TreeFolder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TreeFolderMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TreeFolder);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Save", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        btBrowserSave.setText("Save");
        btBrowserSave.setEnabled(false);
        btBrowserSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBrowserSaveActionPerformed(evt);
            }
        });

        txtNameSave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameSaveKeyPressed(evt);
            }
        });

        btOpen.setText("Open");
        btOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOpenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNameSave)
                .addGap(13, 13, 13)
                .addComponent(btOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btBrowserSave, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btBrowserSave)
                    .addComponent(txtNameSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btOpen))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Run", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        lbProcess.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbProcess.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbProcess.setText("0/0");

        cbbMode.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbbMode.setModel(new javax.swing.DefaultComboBoxModel<>(this.getListMode()));
        cbbMode.setToolTipText("Run mode");
        cbbMode.setRenderer(new DefaultListCellRenderer() {
            public Component getListCellRendererComponent(JList jList, Object o, int i, boolean b, boolean b1) {
                JLabel rendrlbl = (JLabel) super.getListCellRendererComponent(jList, o, i, b, b1);    //todo: override
                rendrlbl.setHorizontalAlignment(SwingConstants.CENTER);
                return rendrlbl;
            }
        });

        btRun.setText("Run");
        btRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRunActionPerformed(evt);
            }
        });

        cbbExcellType.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbbExcellType.setModel(new javax.swing.DefaultComboBoxModel<>(this.getListSheetMode()));
        cbbExcellType.setToolTipText("Excell mode");
        cbbExcellType.setRenderer(new DefaultListCellRenderer() {
            public Component getListCellRendererComponent(JList jList, Object o, int i, boolean b, boolean b1) {
                JLabel rendrlbl = (JLabel) super.getListCellRendererComponent(jList, o, i, b, b1);    //todo: override
                rendrlbl.setHorizontalAlignment(SwingConstants.CENTER);
                return rendrlbl;
            }
        });

        btStopScan.setText("Stop");
        btStopScan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btStopScanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Processer, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(lbProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbbExcellType, 0, 103, Short.MAX_VALUE)
                    .addComponent(btRun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbbMode, 0, 100, Short.MAX_VALUE)
                    .addComponent(btStopScan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbProcess))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbbMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbbExcellType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Processer, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btRun)
                            .addComponent(btStopScan)))))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBrowserActionPerformed
        if (this.chooser.showSelectMutiFolder(this) != JFileChooser.APPROVE_OPTION) {
            return;
        }
        File[] files = this.chooser.getSelectedFiles();
        if (files.length > 1) {
            this.txtPathLog.setText(this.chooser.getCurrDir().toString());
        } else {
            this.txtPathLog.setText(files[0].toString());
        }
        scanAndShowTreeFolder(files);
    }//GEN-LAST:event_btBrowserActionPerformed

    private void scanAndShowTreeFolder(File[] folders) {
        if (this.folderScan.isFolderScanning()) {
            return;
        }
        this.folderScan.scanFolder(folders);
    }

    private void btRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRunActionPerformed
        // TODO add your handling code here:
        if (engine.isRun()) {
            return;
        }
        engine.run();
        saveDataSource();
    }//GEN-LAST:event_btRunActionPerformed

    private void saveDataSource() {
        this.initSource.setDir(this.chooser.getCurrDir().getPath());
        this.initSource.setDirTre(this.txtPathLog.getText());
        this.initSource.setContain(this.txtContain.getText());
        this.initSource.setMacth(this.txtMatch.getText());
        this.initSource.setTitle(this.txtTitle.getText());
        this.initSource.setItem(this.txtItem.getText());
        this.initSource.saveKeyWords();
    }

    private void btBrowserSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBrowserSaveActionPerformed
        chooseFileToSave();
    }//GEN-LAST:event_btBrowserSaveActionPerformed

    public void chooseFileToSave() {
        // TODO add your handling code here:
        if (this.chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = this.chooser.getSelectedFile();
            this.txtNameSave.setText(file.toString());
            boolean success = this.service.copyFileNotRename(
                    new File(this.wareHouse.getPathExcellTemp()), file);
            if (!success) {
                JOptionPane.showMessageDialog(null, "Save file failed!\r\nPlease try again.");
                return;
            }
            JOptionPane.showMessageDialog(null, "Save file : " + file.getPath());
        }
    }

    private void TreeFolderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TreeFolderMouseClicked
        showPpMenu(evt, this.treeMenu.getMenu(), TreeFolder);
    }//GEN-LAST:event_TreeFolderMouseClicked

    private void showPpMenu(MouseEvent evt, JPopupMenu menu, Component component) {
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            menu.show(component, evt.getX(), evt.getY());
        }
    }


    private void tbListFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListFileMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            showPpMenu(evt, this.tableMenu.getMenu(), tbListFile);
        } else {
            if (evt.getClickCount() > 1) {
                this.tableService.openFile();
            }
        }
    }//GEN-LAST:event_tbListFileMouseClicked

    private void txtContainKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContainKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.fileScans.scanAllFle();
        }
    }//GEN-LAST:event_txtContainKeyPressed

    private void txtMatchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatchKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.fileScans.scanAllFle();
        }
    }//GEN-LAST:event_txtMatchKeyPressed

    private void txtPathLogKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPathLogKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String dir = this.txtPathLog.getText().trim();
            File foder = new File(dir);
            if (foder.exists() && foder.isDirectory()) {
                scanAndShowTreeFolder(new File[]{foder});
            }
        }
    }//GEN-LAST:event_txtPathLogKeyPressed

    private void txtNameSaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameSaveKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String dir = this.txtNameSave.getText().trim();
            File foder = new File(dir);
            service.openFile(foder);
        }
    }//GEN-LAST:event_txtNameSaveKeyPressed

    private void btOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOpenActionPerformed
        // TODO add your handling code here:
        if (this.chooser.showOpenFile(this, this.txtNameSave.getText()) == JFileChooser.APPROVE_OPTION) {
            service.openFile(this.chooser.getSelectedFile());
            this.txtNameSave.setText(this.chooser.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_btOpenActionPerformed

    private void TreeFolderTreeExpanded(javax.swing.event.TreeExpansionEvent evt) {//GEN-FIRST:event_TreeFolderTreeExpanded
        // TODO add your handling code here:
        MyNodeTree<File> node = (MyNodeTree<File>) evt.getPath().getLastPathComponent();
        new Thread() {
            private MyNodeTree<File> node;

            @Override
            public void run() {
                folderScan.insertFolder(node);
                folderScan.reset();
            }

            private Thread set(MyNodeTree<File> node) {
                this.node = node;
                return this;
            }
        }.set(node).start();
    }//GEN-LAST:event_TreeFolderTreeExpanded

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.txtContain.setText(initSource.getContain());
        this.txtMatch.setText(initSource.getMatch());
        this.txtTitle.setText(initSource.getTitle());
        this.txtItem.setText(initSource.getItem());
        this.txtPathLog.setText(initSource.getDirTree());
        File fileDir = new File(this.initSource.getDirTree());
        if (fileDir.exists()) {
            scanAndShowTreeFolder(new File[]{fileDir});
            return;
        }
        scanAndShowTreeFolder(new File[]{new File("..")});
    }//GEN-LAST:event_formWindowOpened

    private void btStopScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btStopScanActionPerformed
        // TODO add your handling code here:
        if (engine.isRun()) {
            engine.stop();
        }
    }//GEN-LAST:event_btStopScanActionPerformed

    private void jScrollPane4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane4MouseClicked
        // TODO add your handling code here:
        showPpMenu(evt, this.tableMenu.getMenu(), this.jScrollPane4);
    }//GEN-LAST:event_jScrollPane4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogAnalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogAnalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogAnalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogAnalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LogAnalysis().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Processer;
    private javax.swing.JTree TreeFolder;
    private javax.swing.JButton btBrowser;
    private javax.swing.JButton btBrowserSave;
    private javax.swing.JButton btOpen;
    private javax.swing.JButton btRun;
    private javax.swing.JButton btStopScan;
    private javax.swing.JComboBox<String> cbbExcellType;
    private javax.swing.JComboBox<String> cbbMode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lbListSun;
    private javax.swing.JLabel lbProcess;
    private javax.swing.JLabel lbSun;
    private javax.swing.JTable tbListFile;
    private javax.swing.JTextField txtContain;
    private javax.swing.JTextArea txtItem;
    private javax.swing.JTextField txtMatch;
    private javax.swing.JTextField txtNameSave;
    private javax.swing.JTextField txtPathLog;
    private javax.swing.JTextArea txtTitle;
    // End of variables declaration//GEN-END:variables

    public AbsMode getMode() {
        int index = this.cbbMode.getSelectedIndex();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "select inde mode == -1!");
            return null;
        }
        return this.listMode.get(index);
    }

    public String getDataTittle() {
        return this.txtTitle.getText();
    }

    public String getDataItem() {
        return this.txtItem.getText();
    }

    public void initProcessBar(int size) {
        this.Processer.setStringPainted(true);
        this.Processer.setMaximum(size);
        this.Processer.setMinimum(0);
    }

    public void setValueProcessBar(int index, int success) {
        this.Processer.setValue(index);
        this.lbProcess.setText(String.format("%s / %s", success, index));
    }

    public void endProcessBar() {
        this.Processer.setStringPainted(false);
    }

    public JTextField getTxtContain() {
        return txtContain;
    }

    public JTextArea getTxtItem() {
        return txtItem;
    }

    public JTextField getTxtMatch() {
        return txtMatch;
    }

    public JTextArea getTxtTitle() {
        return txtTitle;
    }

    public TableService getTableService() {
        return this.tableService;
    }

    public void setEnabledBtSave(boolean status) {
        this.btBrowserSave.setEnabled(status);
    }

    public JLabel getListSun() {
        return this.lbListSun;
    }

    public AbsSheetType getExcelType() {
        int index = this.cbbExcellType.getSelectedIndex();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "select excell type == -1!");
            return null;
        }
        return this.ExcellMode.get(index);
    }

    public JTree getTree() {
        return this.TreeFolder;
    }

    public JTable getTable() {
        return this.tbListFile;
    }
}
