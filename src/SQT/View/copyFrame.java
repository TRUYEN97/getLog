/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SQT.View;

import SQT.Model.ServiceClass.Service;
import SQT.Model.WareHouse;
import java.io.File;

/**
 *
 * @author 21AK22
 */
public class copyFrame extends javax.swing.JFrame {

    private final WareHouse wareHouse;
    private final Service service;
    private Thread thread;

    /**
     * Creates new form copyFrame
     */
    public copyFrame() {
        initComponents();
        this.wareHouse = WareHouse.getInstance();
        this.service = new Service();
    }

    public void run(int[] rows, String folder) {
        this.processCopy.setMaximum(rows.length);
        this.processCopy.setMinimum(0);
        this.processCopy.setStringPainted(true);
        this.thread = new Thread() {
            private int[] rows;
            private String folder;

            @Override
            public void run() {
                int value = 1;
                for (Integer index : rows) {
                    File source = wareHouse.getFileAt(index);
                    File newFile = new File(String.format("%s%s%s",
                            folder,
                            File.separator,
                            source.getName()));
                    service.copyFile(source, newFile);
                    setValue(value++);
                }
                dispose();
            }

            private Thread set(int[] rows, String folder) {
                this.folder = folder;
                this.rows = rows;
                return this;
            }

        }.set(rows, folder);
        this.thread.start();

    }

    private void setValue(int value) {
        this.lbSum.setText(String.format("%s/%s", value, this.processCopy.getMaximum()));
        this.processCopy.setValue(value);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbSum = new javax.swing.JLabel();
        processCopy = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Copy");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lbSum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSum.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(processCopy, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(lbSum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbSum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(processCopy, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (this.thread != null && this.thread.isAlive()) {
            this.thread.stop();
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(copyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new copyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbSum;
    private javax.swing.JProgressBar processCopy;
    // End of variables declaration//GEN-END:variables
}
